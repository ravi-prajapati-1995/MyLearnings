Where we are using container-id we can also use container-name righter is will do the job

docker build -t api-gateway .  --> To build docker image -t [tag-Name] meaning we want to create a docker tag with
        the name of api-gateway, we will search for the Dockerfile

docker ps --> List out all the running docker images
docker stop [container-id]  --> To stop the docker container with the given id
docker restart [container-id] --> to restart a container

docker run -d -p 8080:8080 --name api-gateway api-gateway  ->>
        -d: Runs the container in detached mode (in the background).
        -p 8080:8080: Maps port 8080 of the container to port 8080 on your machine.
        --name api-gateway: Assigns a name to the container for easier management.
        api-gateway: The Docker image you want to use.

docker logs -f [container-id]  --> To see the logs of a running container
                               -f  follow flag will tail logs

docker run -it <image-name> sh  --> To see what's inside the image, you can run a container from it and inspect it interactively

docker inspect <image-id or image-name>  --> Use the docker image inspect command to view detailed metadata about the image

To give env variable we can use ENV variable_name=variable_value or we can give variable while we create build using
docker build --build-arg APP_ENV=production -t my-app .

docker stats --> This gives us information about the memory and cpu utilization of each and every running docker image

docker run -d -p 4566:4566 localstack/localstack